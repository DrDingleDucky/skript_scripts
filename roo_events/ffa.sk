variables:
    # ----- unnecessary initialization ----- #
    # {alive::*}
    # {dead::*}
    # {left::*}
    {game::state} = false
    {auto::join} = false
    {drop} = true
    {pos::x} = 0
    {pos::z} = 0
    {round} = 1
    {world} = ""

# -------------------- spawns -------------------- #
local function lobby_spawn() :: object:
    return location(0.5, 0, 0.5, world "rooevents", 90, 0)

local function event_spawn() :: object:
    return location(-222, 72, 296, world "%{world}%", 0, 0)

local function ground_spawn() :: object:
    return location(-222, 32, 296, world "%{world}%", 0, 0)

local function center_spawn() :: object:
    return location(138, 38, -111, world "%{world}%", 0, 0)

# -------------------- command function -------------------- #
local function set_gamemode(p: player, m: text):
    execute console command "/minecraft:gamemode %{_m}% %{_p}%"

local function send_brodcast(t: text):
    execute console command "/broadcast %{_t}%"

local function give_effect(p: player):
    execute console command "/minecraft:effect give %{_p}% minecraft:slow_falling 7 1 true"

local function send_title(t: text, n: text):
    execute console command "/minecraft:title @a title ""%{_t}%"""
    execute console command "/minecraft:title @a subtitle ""%{_n}%"""

local function give_item(w: text, p: player, i: text, n: number):
    execute console command "/execute in minecraft:%{_w}% run give %{_p}% %{_i}% %{_n}%"

local function play_sound(s: text):
    execute console command "/execute at @a run playsound minecraft:%{_s}% player @p ~ ~ ~ 0.5 1"

function set_lp(p: player, n: text):
    execute console command "/luckperms user %{_p}% parent set %{_n}%"

# -------------------- scoreboard function -------------------- #
local function get_round() :: text:
    if {round} is 1:
        return "&a&l1&7 - 2 - 3"
    else if {round} is 2:
        return "&71 - &r&a&l2&r&7 - 3"
    else if {round} is 3:
        return "&71 - 2 - &r&a&l3&r&7"
    return ""

local function is_drop() :: text:
    if {drop}:
        return "&e&lDrop: X&r&6 %{pos::x}%&r&e&l Z&r&6 %{pos::z}%"
    return ""

local function is_line() :: text:
    if {drop}:
        return "&6&m                                "
    return ""

# -------------------- scoreboard -------------------- #
on join:
    wait 20 tick
    set_lp(player, "default")
    if {dead::*} contains player's uuid:
        set_gamemode(player, "spectator")
    else if not {auto::join}:
        if {game::state}:
            if {left::*} does not contain player's uuid:
                teleport player to center_spawn()
                wait 10 tick
                set_gamemode(player, "spectator")
            else:
                add player's uuid to {alive::*}
    else if {left::*} contains player' uuid:
        add player's uuid to {alive::*}
    else if {game::state}:
        add player's uuid to {alive::*}
        teleport player to ground_spawn()
        give_item({world}, player, "cooked_beef", 16)
    else if {auto::join}:
        teleport player to event_spawn()
    while player is online:
        if player is not in world "rooevents":
            set line 1 of player's scoreboard to is_line()
            set line 2 of player's scoreboard to is_drop()
            set line 3 of player's scoreboard to "&6&m                                "
            set line 4 of player's scoreboard to "%colored {phase}%:&r %game_time()%"
            set line 5 of player's scoreboard to "&6&m                                "
            set line 6 of player's scoreboard to ""
            set line 7 of player's scoreboard to "&a&lAlive:&r %size of {alive::*}%"
            set line 8 of player's scoreboard to ""
            set line 9 of player's scoreboard to "&6&m                               "
            set line 10 of player's scoreboard to "Round: %get_round()%"
            set line 11 of player's scoreboard to "&6&m                               "
            set title of player's scoreboard to "&x&f&f&2&6&2&6&lR&x&f&f&3&a&2&1&lo&x&f&f&4&e&1&6&lo &x&f&f&6&2&1&8&lE&x&f&f&7&7&1&3&lv&x&f&f&8&b&0&e&le&x&f&f&9&f&0&a&ln&x&f&f&b&3&0&5&lt&x&f&f&c&7&0&0&ls"
        wait 1 second

on quit:
    remove player's uuid from {alive::*}
    if player is not in world "rooevents":
        if {game::state}:
            add player's uuid to {left::*}

# -------------------- on death logic -------------------- #
on death of player with priority highest:
    if victim is not in world "rooevents":
        if {game::state}:
            cancel event
            set {_p} to victim
            loop all items in {_p}'s inventory:
                drop loop-value at {_p}
                set slot index of loop-value of {_p} to air
            set_gamemode(victim, "spectator")
            add victim's uuid to {dead::*}
            remove victim's uuid from {alive::*}
            # strike lightning effect at the victim

command /ffaresetall:
    permission: op
    trigger:
        delete {alive::*}
        delete {dead::*}
        delete {left::*}
        set {game::state} to false
        set {auto::join} to false
        set {round} to 1

command /ffasetround <number>:
    permission: op
    trigger:
        set {round} to arg-1

command /ffasetworld <text>:
    permission: op
    trigger:
        set {world} to arg-1

command /ffaround <number>:
    permission: op
    trigger:
        if arg-1 is 1:
            set {world} to "ffa1"
        else if arg-1 is 2:
            set {world} to "ffa2"
        else if arg-1 is 3:
            set {world} to "ffa3"
        set {round} to arg-1
        set {auto::join} to true
        loop all players:
            if loop-player is not "DrDingleDucky":
                if loop-player is not "AjosWhip":
                    teleport loop-player to event_spawn()

command /ffastart:
    permission: op
    trigger:
        set {game::state} to true
        set {_n} to 10
        set {_c} to {_n}
        loop {_n} times:
            send title "&a%{_c}%" to all players
            play_sound("block.note_block.pling")
            subtract 1 from {_c}
            wait 1 second
        send title "&aGO" to all players
        play_sound("block.note_block.harp")
        loop all players:
            if loop-player is not "DrDingleDucky":
                if loop-player is not "AjosWhip":
                    add loop-player's uuid to {alive::*}
                    give_item({world}, loop-player, "cooked_beef", 16)
                    give_effect(loop-player)
        fill("%{world}%", -204, 69, 278, -240, 80, 314, "air")
        wait 8 seconds
        send_title("", "&c&lPvP on in &r&a5:00&r&c&l minutes")
        set {phase} to "&c&lPvP on in"
        set {game::time} to 300

command /ffashrinkboarder:
    permission: op
    trigger:
        set {auto::join} to false
        send_title("", "&c&lBorder Shrinking to &r&6160 -100")
        send_brodcast("&c&lBorder Shrinking to &r&6160 -100&r &a&lGET OUT OF CAVES!!!")
        execute console command "/execute in minecraft:%{world}% run worldborder set 200 780"
        set {phase} to "&c&lBorder Shrinking"
        set {game::time} to 780

command /ffaend:
    permission: op
    trigger:
        delete {alive::*}
        delete {dead::*}
        delete {left::*}
        set {game::state} to false
        set {auto::join} to false
        teleport all players to lobby_spawn()
        set {phase} to "&b&lStarting in"
        set {game::time} to 60

command /ffareviveplayer <player>:
    permission: op
    trigger:
        teleport arg-1 to player
        add arg-1's uuid to {alive::*}
        remove arg-1's uuid from {dead::*}
        set_gamemode(arg-1, "survival")

command /ffadrop:
    permission: op
    trigger:
        set {drop} to true
        set {pos::x} to round(player's x-coordinate)
        set {pos::z} to round(player's z-coordinate)
        send_title("&c&lSupply Drop", "&eX:&r&6 %{pos::x}% &r&eZ:&r&6 %{pos::z}%")
        send_brodcast("Supply Drop at &c&lx &6&l%{pos::x}% &c&lz &6&l%{pos::z}%")

command /ffacleardrop:
    permission: op
    trigger:
        set {drop} to false
