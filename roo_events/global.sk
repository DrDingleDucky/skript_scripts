# -------------------- Log -------------------- #
#
# last modified by : DrDingleDucky
# last modification: 2024/01/07
#
# -------------------- global state variables (don't modify) -------------------- #
variables:
    # ----- unnecessary initialization ----- #
    # {global::combat::*}
    {combat::cooldown::%player%} = 0
    {game::time} = 0
    {timer::min} = 0
    {timer::sec} = 0
    {phase} = ""

# -------------------- global functions -------------------- #
function fill(w: text, 1x: number, 1y: number, 1z: number, 2x: number, 2y: number, 2z: number, b: text):
    execute console command "/execute in minecraft:%{_w}% run forceload add %{_1x}% %{_1z}% %{_2x}% %{_2z}%"
    execute console command "/execute in minecraft:%{_w}% run fill %{_1x}% %{_1y}% %{_1z}% %{_2x}% %{_2y}% %{_2z}% minecraft:%{_b}%"
    execute console command "/execute in minecraft:%{_w}% run forceload remove %{_1x}% %{_1z}% %{_2x}% %{_2z}%"

function game_time() :: string:
    if {game::time} < 0:
        return "00:00"
    set {timer::min} to floor({game::time} / 60)
    set {timer::sec} to mod({game::time}, 60)
    if {timer::min} < 10:
        if {timer::sec} < 10:
            return "0%{timer::min}%:0%{timer::sec}%"
        return "0%{timer::min}%:%{timer::sec}%"
    else if {timer::sec} < 10:
        return "%{timer::min}%:0%{timer::sec}%"
    return "%{timer::min}%:%{timer::sec}%"

# -------------------- local helper functions -------------------- #
local function combat(p: player):
    if {global::combat::*} does not contain {_p}:
        add {_p} to {global::combat::*}
        set {combat::cooldown::%{_p}%} to 5
        send "&cYou Are In Combat" to {_p}
        while {combat::cooldown::%{_p}%} > 0:
            subtract 1 from {combat::cooldown::%{_p}%}
            if {combat::cooldown::%{_p}%} <= 0:
                remove {_p} from {global::combat::*}
                send "&aYou Are No Longer In Combat" to {_p}
            wait 1 second
    else:
        set {combat::cooldown::%{_p}%} to 5

# -------------------- scoreboard clear -------------------- #
on join:
    clear scoreboard of player

on world change:
    clear scoreboard of player

# -------------------- combat log -------------------- #
on damage of player by player with priority highest:
    combat(attacker)
    combat(victim)

on death of player with priority highest:
    remove victim from {global::combat::*}
    if {combat::cooldown::%victim%} > 0:
        set {combat::cooldown::%victim%} to 0
        send "&aYou Are No Longer In Combat" to victim

on quit:
    if {combat::cooldown::%player%} > 0:
        kill player
        remove player from {global::combat::*}
        set {combat::cooldown::%player%} to 0

# -------------------- chat cooldown -------------------- #
on chat with priority highest:
    if player is not op:
        if player's gamemode is spectator:
            cancel event
        else if {chat::cooldown::*} does not contain player's uuid:
            add player's uuid to {chat::cooldown::*}
            wait 3 second
            remove player's uuid from {chat::cooldown::*}
        else:
            cancel event
            message "&cYou must wait 3 seconds before chatting again!"

# -------------------- 1 lava only -------------------- #
on inventory slot change:
    if event-item is lava bucket:
        if amount of lava buckets in player's inventory is greater than 1:
            remove (amount of lava buckets in player's inventory - 1) of lava buckets from player's inventory
            message "&cYou had too many buckets of lava in your inventory! The extra buckets have been evaporated."

# -------------------- event timer -------------------- #
every 1 second:
    subtract 1 from {game::time}

# -------------------- global commands -------------------- #
command /eventclose:
    permission: op
    trigger:
        fill("overworld", -17, -1, 1, -19, -1, -1, "light_blue_stained_glass")

command /eventopen:
    permission: op
    trigger:
        fill("overworld", -17, -1, 1, -19, -1, -1, "air")

command /eventsetscoreboard <text> <number>:
    permission: op
    trigger:
        set {phase} to arg-1
        set {game::time} to arg-2

command /eventsetphase <text>:
    permission: op
    trigger:
        set {phase} to arg-1

command /eventsettime <number>:
    permission: op
    trigger:
        set {game::time} to arg-1

# -------------------- reset commands -------------------- #
command /combatresetall:
    permission: op
    trigger:
        loop all players:
            delete {global::combat::*}
            set {combat::cooldown::%loop-player%} to 0
            delete {civ::combat::*}
