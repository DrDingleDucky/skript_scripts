on join:
    while player is online:
        set title of player's scoreboard to " "
        set line 15 of player's scoreboard to "&x&f&f&2&6&2&6&lR&x&f&f&3&a&2&1&lo&x&f&f&4&e&1&d&lo &x&f&f&6&2&1&8&lE&x&f&f&7&7&1&3&lv&x&f&f&8&b&0&e&le&x&f&f&9&f&0&a&ln&x&f&f&b&3&0&5&lt&x&f&f&c&7&0&0&ls"
        set line 14 of player's scoreboard to "&6&m                       "
        if {event::round} is 1:
            set line 10 of player's scoreboard to "&6Round: &a&l1 &r- &72 &r- &73"
        else if {event::round} is 2:
            set line 10 of player's scoreboard to "&6Round: &71 &r- &a&l2 &r- &73"
        else if {event::round} is 3:
            set line 10 of player's scoreboard to "&6Round: &71 &r- &72 &r- &a&l3"
        else:
            set line 10 of player's scoreboard to "&6Round: &71 &r- &72 &r- &73"
        set line 9 of player's scoreboard to "&6&m                       "
        if {event::kills::%player's uuid%} is set:
            set line 8 of player's scoreboard to "&bKills: %{event::kills::%player's uuid%}%"
        else:
            set line 8 of player's scoreboard to "&bKills: 0"
        set line 7 of player's scoreboard to " "
        set line 6 of player's scoreboard to "&aAlive: %size of {event::alive::*}%"
        set line 5 of player's scoreboard to "&cDead: %size of {event::dead::*}%"
        set line 4 of player's scoreboard to "&6&m                       "
        set line 3 of player's scoreboard to colored {event::phase}
        set line 2 of player's scoreboard to "Time: %gettimer()%"
        set line 1 of player's scoreboard to "&6&m                       "
        wait 1 second

command /round <integer>:
    permission: event.admin
    trigger:
        if arg-1 is 1:
            set {event::round} to 1
            message "&aThe Round is %{event::round}%"
        else if arg-1 is 2:
            set {event::round} to 2
            message "&aThe Round is %{event::round}%"
        else if arg-1 is 3:
            set {event::round} to 3
            message "&aThe Round is %{event::round}%"
        else:
            set {event::round} to 0
            message "&aThe Round is %{event::round}%"

command /removesb:
    permission: event.admin
    trigger:
        loop all players:
            clear loop-player's scoreboard

command /togglescoreboard <boolean>:
    permission: event.admin
    trigger:
        if arg-1 is true:
            set {event::showsb} to true
            message "&aThe Scoreboard is &a&lActive"
        if arg-1 is false:
            set {event::showsb} to false
            message "&aThe Scoreboard is &c&lInactive"

command /revive <player> [<string>]:
    permission: event.admin
    trigger:
        if {event::dead::*} contains arg-1's uuid:
            remove arg-1's uuid from {event::dead::*}
            add arg-1's uuid to {event::alive::*}
            teleport arg-1 to player
            set arg-1's gamemode to survival
            if arg-2 is not "-s":
                message "&a%arg-1% &8has been &aRevived &8by %player%."
        else:
            message "&cThat player is very much alive."

command /setphase <string>:
    permission: event.admin
    trigger:
        set {event::phase} to arg-1
        message "&8You set the phase to %colored arg-1%&8."

command /settimer <integer>:
    permission: event.admin
    trigger:
        if arg-1 is not less than 0:
            set {event::timer::time} to arg-1

command /setallalive:
    permission: event.admin
    trigger:
        delete {event::dead::*}
        delete {event::alive::*}
        loop all players:
            add loop-player's uuid to {event::alive::*}

command /reviveall:
    permission: event.admin
    trigger:
        loop {event::dead::*}:
            set {_p} to loop-value parsed as offline player
            if {_p} is online:
                remove {_p}'s uuid from {event::dead::*}
                add {_p}'s uuid to {event::alive::*}
                teleport {_p} to player
                set {_p}'s gamemode to survival
            else:
                remove {_p}'s uuid from {event::dead::*}

on join:
    wait 0.1 second
    if player's gamemode is survival:
        if {event::dead::*} contains player's uuid:
            set player's gamemode to spectator
    else if player's gamemode is spectator:
        if {event::alive::*} contains player's uuid:
            set player's gamemode to survival

every 1 second:
    if {event::timer::*} is set:
        set {event::timer::minutes} to rounded down ({event::timer::time} / 60)
        set {event::timer::seconds} to ({event::timer::time} - ({event::timer::minutes} * 60))
        if {event::timer::time} is greater than 0:
            subtract 1 from {event::timer::time}
        else:
            delete {event::timer::*}

function gettimer() :: string:
    if {event::timer::*} is set:
        if {event::timer::minutes} is greater than 0:
            if {event::timer::seconds} is greater than 0:
                if {event::timer::seconds} is not greater than 9:
                    return "%{event::timer::minutes}%:0%{event::timer::seconds}%"
                else:
                    return "%{event::timer::minutes}%:%{event::timer::seconds}%"
            else:
                return "%{event::timer::minutes}%:00"
        else:
            if {event::timer::seconds} is greater than 0:
                if {event::timer::seconds} is not greater than 9:
                    return "0:0%{event::timer::seconds}%"
                else:
                    return "0:%{event::timer::seconds}%"
            else:
                return "0:00"
    else:
        return "0:00"

on damage of player:
    if final damage is greater than or equal to health of victim:
        if {event::dead::*} doesn't contain victim's uuid:
            cancel event
            set victim's gamemode to spectator
            heal victim   # Heal the player just in case they need to be revived
            set {_p} to victim
            drop all items in {_p}'s inventory
            execute console command "/minecraft:clear %victim%"   #No duping
            if attacker is a player:
                add 1 to {event::kills::%attacker's uuid%}
            remove victim's uuid from {event::alive::*}
            add victim's uuid to {event::dead::*}
            strike lightning effect at the victim
            #execute console command "/execute at @a run playsound minecraft:entity.lightning_bolt.thunder player @a"
            broadcast "&8The player &c%victim% &8has been eliminated!"

on respawn:
    set player's gamemode to spectator
    remove player's uuid from {event::alive::*}
    add player's uuid to {event::dead::*}

#Start of event stuff idk
command /prestart:
    permission: event.admin
    trigger:
        teleport all players to player
        delete {event::alive::*}
        delete {event::dead::*}
        delete {event::kills::*}
        loop all players:
            add loop-player's uuid to {event::alive::*}
        broadcast "&6&lEvent Info: &aLoot chests, structures and mine in caves for resources."

command /endround:
    permission: event.admin
    trigger:
        delete {event::alive::*}
        delete {event::dead::*}
        delete {event::kills::*}
        teleport all players to player
        loop all players:
            add loop-player's uuid to {event::alive::*}
            set loop-player's gamemode to survival

command /nojoin <boolean>:
    permission: event.admin
    trigger:
        if arg-1 is false:
            set {event::nojoin} to false
            message "&aMid-Game joining is &a&lEnabled&r&a."
        if arg-1 is true:
            set {event::nojoin} to true
            message "&aMid-Game joining is &c&lDisabled&r&c."

on join:
    if {event::nojoin} is true:
        if {event::alive::*} does not contain player's uuid:
            if {event::dead::*} does not contain player's uuid:
                set player's gamemode to spectator
                heal player   #Heal the player just in case they need to be
                execute console command "/minecraft:clear %player%"
                remove player's uuid from {event::alive::*}
                add player's uuid to {event::dead::*}
                broadcast "&c%player% &8Was late to the party!"
                execute console command "/spawn %player%"
            else:
                execute console command "/spawn %player%"
    else:
        if {event::alive::*} does not contain player's uuid:
            if {event::dead::*} does not contain player's uuid:
                add player's uuid to {event::alive::*}

command /start:
    permission: event.admin
    trigger:
        send title "&c5" to all players
        wait 1 second
        send title "&c4" to all players
        wait 1 second
        send title "&c3" to all players
        wait 1 second
        send title "&c2" to all players
        wait 1 second
        send title "&c1" to all players
        wait 1 second
        make player execute command "/fill 101 71 98 119 79 80 air"
        apply potion of slow falling of tier 0 without any particles to all players for 10 seconds
        send title "&a&lGO!" to all players

#Just in case in case in case in case in case in case
command /reseteverything [<string>]:
    permission: event.admin
    trigger:
        if arg-1 is "confirm":
            broadcast "&cResetting All Event Data."
            set {event::showsb} to false
            message "&aScoreboard Disabled"
            delete {event::kills::*}
            message "&aKills Reset"
            delete {event::alive::*}
            message "&aRemoved Alive Players"
            delete {event::dead::*}
            message "&aRemoved Dead Players"
            set {event::stage} to 1
            message "&aEvent Stage Set To Pre-Event"
            broadcast "&aReset Complete!"
        else:
            message "&cAre you &c&lSURE &r&cyou want to reset everything? This resets every variable and basically deletes all player information. &aType /reseteverything confirm to confirm."

command /refreshalive:
    permission: event.admin
    trigger:
        loop {event::alive::*}:
            set {_p} to loop-value parsed as offline player
            if {_p} is not online:
                remove loop-value from {event::alive::*}
