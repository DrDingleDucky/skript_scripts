on right click:
    if byte tag "BPhammer" of nbt compound of event-item is 1:
        if {hammerc::%player's uuid%} is not set:
            set {hammerc::%player's uuid%} to now
            set item cooldown of event-item for player to {hammer.cooldown}
            hp(player)
            play sound "entity.warden.sonic_boom" with volume 0.5 with pitch 0.8 at player
            loop all entities in radius 7 around player where [input is not player]:
                damage loop-entity by {hammer.dmg}
                knock loop-entity (vector from player to loop-entity) with strength 1.5
                push the loop-entity upwards at speed 0.4
            stop
        set {_hammert} to difference between {hammerc::%player's uuid%} and now
        if {_hammert} is less than {hammer.cooldown}:
            stop
        else:
            set {hammerc::%player's uuid%} to now
            set item cooldown of event-item for player to {hammer.cooldown}
            hp(player)
            play sound "entity.warden.sonic_boom" with volume 0.5 with pitch 0.8 at player
            loop all entities in radius 7 around player where [input is not player]:
                damage loop-entity by {hammer.dmg}
                knock loop-entity (vector from player to loop-entity) with strength 1.5
                push the loop-entity upwards at speed 0.4
            stop

function hp(p: player):
    draw 10 of sonic boom at {_p} with offset vector(1, 0.6, 1) with extra 0
    draw 45 of sculk soul at {_p} with offset vector(3, 0, 3) with extra 0.05

command /bec <string> <string> <number>:
    permission: op
    permission message: &x&7&2&F&F&8&1&lB.E.C &r&f> &cYou don't have permission to run this command!
    usage: &x&7&2&F&F&8&1&lB.E.C &r&f> &c/bec <item> <type> <number>
    trigger:
        if arg-1 is "blastbow":
            if arg-2 is "damage":
                if arg-3 is below 1:
                    send "&x&7&2&F&F&8&1&lB.E.C &r&f> &cThe damage of the blastbow can't go below 1!"
                    stop
                else:
                    set {blastbow.dmg} to arg-3
                    send "&x&7&2&F&F&8&1&lB.E.C &r&f> &aThe damage of the blastbow has been set to %arg-3%!"
            if arg-2 is "cooldown":
                if arg-3 is below 0:
                    send "&x&7&2&F&F&8&1&lB.E.C &r&f> &cThe cooldown of the blastbow can't go below 0!"
                    stop
                else:
                    set {blastbow.cooldown} to "%arg-3% seconds" parsed as timespan
                    send "&x&7&2&F&F&8&1&lB.E.C &r&f> &aThe cooldown of the blastbow has been set to %arg-3% seconds!"
        if arg-1 is "thunderbow":
            if arg-2 is "chance":
                if arg-3 is below 0:
                    send "&x&7&2&F&F&8&1&lB.E.C &r&f> &cThe chance of the thunderbow can't go below 0!"
                    stop
                if arg-3 is above 100:
                    send "&x&7&2&F&F&8&1&lB.E.C &r&f> &cThe chance of the thunderbow can't go above 100!"
                    stop
                else:
                    set {thunderbow.chance} to arg-3
                    send "&x&7&2&F&F&8&1&lB.E.C &r&f> &aThe chance of the thunderbow has been set to %arg-3%!"
            if arg-2 is "cooldown":
                if arg-3 is below 0:
                    send "&x&7&2&F&F&8&1&lB.E.C &r&f> &cThe cooldown of the thunderbow can't go below 0!"
                    stop
                else:
                    set {thunderbow.cooldown} to "%arg-3% seconds" parsed as timespan
                    send "&x&7&2&F&F&8&1&lB.E.C &r&f> &aThe cooldown of the thunderbow has been set to %arg-3% seconds!"
            if arg-2 is "damage":
                if arg-3 is below 0:
                    send "&x&7&2&F&F&8&1&lB.E.C &r&f> &cThe lightning damage of the thunderbow can't go below 0!"
                    stop
                else:
                    set {thunderbow.lightningdmg} to arg-3
                    send "&x&7&2&F&F&8&1&lB.E.C &r&f> &aThe lightning damage of the thunderbow has been set to %arg-3%!"
                    stop
        if arg-1 is "dashsword":
            if arg-2 is "cooldown":
                if arg-3 is below 0:
                    send "&x&7&2&F&F&8&1&lB.E.C &r&f> &cThe cooldown of the dashsword can't go below 0!"
                    stop
                else:
                    set {dashsword.cooldown} to "%arg-3% seconds" parsed as timespan
                    send "&x&7&2&F&F&8&1&lB.E.C &r&f> &aThe cooldown of the dashsword has been set to %arg-3% seconds!"
        if arg-1 is "hammer":
            if arg-2 is "cooldown":
                if arg-3 is below 0:
                    send "&x&7&2&F&F&8&1&lB.E.C &r&f> &cThe cooldown of the hammer can't go below 0!"
                    stop
                else:
                    set {hammer.cooldown} to "%arg-3% seconds" parsed as timespan
                    send "&x&7&2&F&F&8&1&lB.E.C &r&f> &aThe cooldown of the hammer has been set to %arg-3% seconds!"
            if arg-2 is "damage":
                if arg-3 is below 0:
                    send "&x&7&2&F&F&8&1&lB.E.C &r&f> &cThe damage of the hammer can't go below 0!"
                    stop
                else:
                    set {hammer.dmg} to arg-3
                    send "&x&7&2&F&F&8&1&lB.E.C &r&f> &aThe damage of the hammer has been set to %arg-3%!"
                    stop

on tab complete of "/bec":
    set tab completions for position 1 to "blastbow" and "thunderbow" and "dashsword" and "hammer"
    if tab arg-1 = "blastbow":
        set tab completions for position 2 to "damage" and "cooldown"
    if tab arg-1 = "thunderbow":
        set tab completions for position 2 to "chance" and "cooldown" and "damage"
    if tab arg-1 = "dashsword":
        set tab completions for position 2 to "cooldown"
    if tab arg-1 = "hammer":
        set tab completions for position 2 to "cooldown" and "damage"
